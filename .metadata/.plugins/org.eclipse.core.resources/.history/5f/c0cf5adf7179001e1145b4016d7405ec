package com.myweb.www.controller;

import java.util.List;

import javax.inject.Inject;
import javax.ws.rs.GET;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.myweb.www.domain.BoardVO;
import com.myweb.www.domain.PagingVO;
import com.myweb.www.handler.PagingHandler;
import com.myweb.www.service.boardService;

import lombok.extern.slf4j.Slf4j;


@RequestMapping("/board/*")
@Controller
@Slf4j
public class BoardController {
		// 폴더명 : board / mapping : board
		//mapping => /board/register
		//목적지 -> /board/register
	
	@Inject
	private boardService bsv;
	//서비스 연결 하기
	
	@GetMapping("/register")
	public String boardregisterGet() {
		return "/board/register";
	}
	
		
	@PostMapping("/register")
	public String register(BoardVO bvo) {
		log.info("boardVO >>>> bvo" + bvo);
		int isOK = bsv.PostRegister(bvo);
		log.info("boardVO isOK >>> "+(isOK > 0 ? "ok" : "fail"));
		return "index";
	}
	
	@GetMapping("/list")
	public String list(Model m, PagingVO pvo) {
		List<BoardVO> list = bsv.getList();
		//리스트는 받을 필요가없음 왜냐 ? 전체로 뿌려주기 때문에 getList를 통해서 Mapper에서
		//select * from한걸 받아서 BoardVO 리스트에 저장
		//그리고 m을 통해 jsp로 뿌려주기
		log.info("list = {} " , list);
		m.addAttribute("list", list);
		
		//페이징 처리
		// 총 페이지 개스 totalCount
		int totalCount = bsv.getTotalCount(pvo);
		PagingHandler ph = new PagingHandler(pvo, totalCount);
		m.addAttribute("ph", ph);
		return "/board/list";
	}
	
	@GetMapping("/detail")
	public void detail(Model m, @RequestParam("bno")long bno) {
		//m은 뷰로 가기위한 객체 ? 그리고 bno를 받아야 어떤 디테일로 갈지 아니까 받은거
		BoardVO bvo = bsv.getDetail(bno);
		log.info("bvo = {}", bvo);
		m.addAttribute("bvo", bvo);
	}

	@GetMapping("modify")
	public void getModify(Model m, @RequestParam("bno")int bno) {
		log.info("Board modify bno = {}", bno);
		BoardVO bvo = bsv.getDetail(bno);
		log.info("bvo = {}", bvo);
		m.addAttribute("bvo", bvo);
	}
	
	@PostMapping("modify")
	public String postModify(BoardVO bvo, RedirectAttributes re) {
				//리턴 리다이렉트에 bno를 가져가려고 RedirectAttributes 이걸 쓴다 
				int isOK = bsv.postModify(bvo);
				re.addAttribute("bno", bvo.getBno());
				return "redirect:/board/detail";
				
	}
	
	@GetMapping("remove")
	public String remove(@RequestParam("bno")int bno) {
		int isOK = bsv.remove(bno);
		log.info("글삭제 >> " + (isOK > 0 ? "성공" : "실패"));
		return "redirect:/board/list";
	}
	
	
	

}
